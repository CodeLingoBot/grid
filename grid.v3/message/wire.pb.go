// Code generated by protoc-gen-go.
// source: wire.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	wire.proto

It has these top-level messages:
	Gram
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Gram_Ver int32

const (
	Gram_V1 Gram_Ver = 0
)

var Gram_Ver_name = map[int32]string{
	0: "V1",
}
var Gram_Ver_value = map[string]int32{
	"V1": 0,
}

func (x Gram_Ver) String() string {
	return proto.EnumName(Gram_Ver_name, int32(x))
}
func (Gram_Ver) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Gram_Enc int32

const (
	Gram_Gob Gram_Enc = 0
)

var Gram_Enc_name = map[int32]string{
	0: "Gob",
}
var Gram_Enc_value = map[string]int32{
	"Gob": 0,
}

func (x Gram_Enc) String() string {
	return proto.EnumName(Gram_Enc_name, int32(x))
}
func (Gram_Enc) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Gram struct {
	Ver      Gram_Ver `protobuf:"varint,1,opt,name=ver,enum=message.Gram_Ver" json:"ver,omitempty"`
	Enc      Gram_Enc `protobuf:"varint,2,opt,name=enc,enum=message.Gram_Enc" json:"enc,omitempty"`
	Data     []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Receiver string   `protobuf:"bytes,4,opt,name=receiver" json:"receiver,omitempty"`
}

func (m *Gram) Reset()                    { *m = Gram{} }
func (m *Gram) String() string            { return proto.CompactTextString(m) }
func (*Gram) ProtoMessage()               {}
func (*Gram) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*Gram)(nil), "message.Gram")
	proto.RegisterEnum("message.Gram_Ver", Gram_Ver_name, Gram_Ver_value)
	proto.RegisterEnum("message.Gram_Enc", Gram_Enc_name, Gram_Enc_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Wire service

type WireClient interface {
	Process(ctx context.Context, in *Gram, opts ...grpc.CallOption) (*Gram, error)
}

type wireClient struct {
	cc *grpc.ClientConn
}

func NewWireClient(cc *grpc.ClientConn) WireClient {
	return &wireClient{cc}
}

func (c *wireClient) Process(ctx context.Context, in *Gram, opts ...grpc.CallOption) (*Gram, error) {
	out := new(Gram)
	err := grpc.Invoke(ctx, "/message.wire/Process", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Wire service

type WireServer interface {
	Process(context.Context, *Gram) (*Gram, error)
}

func RegisterWireServer(s *grpc.Server, srv WireServer) {
	s.RegisterService(&_Wire_serviceDesc, srv)
}

func _Wire_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Gram)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.wire/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireServer).Process(ctx, req.(*Gram))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wire_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.wire",
	HandlerType: (*WireServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Process",
			Handler:    _Wire_Process_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("wire.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8f, 0xc1, 0x6a, 0x85, 0x30,
	0x10, 0x45, 0xcd, 0x4b, 0x78, 0xb6, 0x43, 0x9f, 0xd8, 0x59, 0x89, 0x2b, 0x49, 0x37, 0x76, 0x13,
	0xd0, 0x7e, 0x83, 0xb8, 0x2d, 0x59, 0xb8, 0x8f, 0xe9, 0x50, 0x5c, 0x68, 0xca, 0x44, 0xda, 0xcf,
	0xe9, 0xaf, 0x96, 0x48, 0x29, 0x08, 0xdd, 0xcd, 0xe5, 0x5c, 0x38, 0x73, 0x01, 0xbe, 0x16, 0x26,
	0xf3, 0xc1, 0x61, 0x0f, 0x98, 0xaf, 0x14, 0xa3, 0x7b, 0x27, 0xfd, 0x2d, 0x40, 0x8d, 0xec, 0x56,
	0x7c, 0x02, 0xf9, 0x49, 0x5c, 0x89, 0x46, 0xb4, 0x45, 0xff, 0x68, 0x7e, 0xb9, 0x49, 0xcc, 0x4c,
	0xc4, 0x36, 0xd1, 0x54, 0xa2, 0xcd, 0x57, 0x97, 0xff, 0x4a, 0xc3, 0xe6, 0x6d, 0xa2, 0x88, 0xa0,
	0xde, 0xdc, 0xee, 0x2a, 0xd9, 0x88, 0xf6, 0xc1, 0x1e, 0x37, 0xd6, 0x70, 0xc7, 0xe4, 0x69, 0x49,
	0x0a, 0xd5, 0x88, 0xf6, 0xde, 0xfe, 0x65, 0x7d, 0x03, 0x39, 0x11, 0xe3, 0x15, 0x2e, 0x53, 0x57,
	0x66, 0xba, 0x00, 0x39, 0x6c, 0x1e, 0x73, 0x90, 0x63, 0x98, 0xcb, 0xac, 0xef, 0x40, 0xa5, 0xc7,
	0xf1, 0x19, 0xf2, 0x57, 0x0e, 0x9e, 0x62, 0xc4, 0xdb, 0xc9, 0x5c, 0x9f, 0xa3, 0xce, 0xe6, 0xeb,
	0x31, 0xf2, 0xe5, 0x27, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x14, 0xcb, 0xdd, 0xf2, 0x00, 0x00, 0x00,
}
